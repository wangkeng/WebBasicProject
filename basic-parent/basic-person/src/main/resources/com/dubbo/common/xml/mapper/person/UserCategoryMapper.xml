<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dubbo.person.dao.IUserCategoryDao" >
  <resultMap id="BaseResultMap" type="com.dubbo.person.model.UserCategory" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="tagList" property="tagList" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="portalId" property="portalId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="VARCHAR" />
   <!--  <collection property="children" column="id" select="getChildList" /> -->
  </resultMap>
  
  <resultMap id="ChildResultMap" type="com.dubbo.person.model.UserCategory">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
	    <result column="description" property="description" jdbcType="VARCHAR" />
	    <result column="tagList" property="tagList" jdbcType="VARCHAR" />
	    <result column="parentId" property="parentId" jdbcType="INTEGER" />
	    <result column="portalId" property="portalId" jdbcType="INTEGER" />
	</resultMap>
  
  
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, createTime, description, tagList, parentId, portalId
  </sql>
  
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from USER_CATEGORY
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
    <delete id="deleteByPrimaryKeyBatch" parameterType="java.lang.Integer">
    delete from USER_CATEGORY
    where id in <foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
  </delete>
  
  <insert id="insert" parameterType="com.dubbo.person.model.UserCategory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into USER_CATEGORY (name, createTime, description, 
      tagList, parentId, portalId
      )
    values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{tagList,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{portalId,jdbcType=INTEGER}
      )
  </insert>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from USER_CATEGORY
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.dubbo.person.model.UserCategory" >
    update USER_CATEGORY
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="tagList != null" >
        tagList = #{tagList,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="portalId != null" >
        portalId = #{portalId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dubbo.person.model.UserCategory" >
    update USER_CATEGORY
    set name = #{name,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      tagList = #{tagList,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=INTEGER},
      portalId = #{portalId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <select id="list" resultType="map" parameterType="map">
		select id,parentId as rid , name as text ,tagList from USER_CATEGORY	 	 
		<where>
			<if test="id != null">
				and parentId = #{id,jdbcType=INTEGER}
			</if>
		</where>
  </select>
  
  
  
    <select id="getTreeGrid" parameterType="map" resultType="map">
		SELECT td.id,td.name,td.parentId as rid,td.tagList,#{level} as level ,td.createTime,td.description, 'false' AS expanded,
		CASE WHEN
		(EXISTS(SELECT id FROM USER_CATEGORY WHERE parentId = td.id))=0
		 THEN 'true'
		ELSE 'false'
		END isLeaf FROM USER_CATEGORY td WHERE parentId = #{id};
	</select>
  
</mapper>